import { AnyObject } from "./defs.js";
import UserSession from "./usersession.js";
/**
 * Project variable.
 * @typedef {Object} Variable
 * @property {string} id - The variable's blockly id.
 * @property {boolean} spriteOnly - Whether the variable is for that sprite only.
 */
/**
 * Project container class.
 * @param {Sprite} stage - The project's stage sprite.
 * @param {Object.<string, Variable>} variables - The project's variables.
 */
declare class Project {
    stage: Sprite;
    variables: AnyObject;
    spritenames: string[];
    sprites: Sprite[];
    constructor(d: AnyObject, desc: AnyObject);
}
declare class Sprite {
    variables: AnyObject;
    lists: AnyObject;
    broadcasts: string[];
    blocks: AnyObject[];
    comments: AnyObject[];
    isStage: boolean;
    name: string;
    costumes: AnyObject[];
    sounds: AnyObject[];
    volume: number;
    layer: number;
    constructor(d: AnyObject);
}
declare class Projects {
    usersession: UserSession | string | undefined;
    constructor(u?: UserSession | string);
    get(id: number | string): Promise<Project>;
    getUserProjects(limit?: number): Promise<Project[] | null>;
}
export default Projects;
declare class ProjectsStatic {
    static get(id: number): Promise<Project>;
    static getUserProjects(un: string, limit?: number): Promise<Project[] | null>;
}
export { Projects, ProjectsStatic };
