import CloudSession from "./cloudsession.js";
import Projects from "./projects.js";
import { AnyObject } from "./defs.js";
/**
 * UserSession API for managing user data.
 * @param {boolean} loaded - whether or not a username and password have been loaded into the session.
 * @param {boolean} valid - the login was sucessful and accepted by the scratch servers.
 */
declare class UserSession {
    loaded: boolean;
    valid: boolean;
    sessionId: string;
    username: string;
    password: string;
    id: number;
    token: string;
    /**
     * Create a blank UserSession
     */
    constructor();
    /**
     * Create a new UserSession with the given username and password.
     * @async
     * @param  {string} [username] - The username to log in with. If missing user will be prompted.
     * @param  {string} [password] - The password to log in with. If missing user will be prompted.
     * @returns {UserSession} - A loaded UserSession.
     */
    static create(username: string, password: string): Promise<UserSession>;
    /**
     * Acess Projects API.
     * @returns {Projects} - Project API
     */
    get projects(): Projects;
    /**
     * Load a blank UserSession with the given username and password.
     * @async
     * @param  {string} [username] - The username to log in with. If missing user will be prompted.
     * @param  {string} [password] - The password to log in with. If missing user will be prompted.
     */
    load(username?: string, password?: string): Promise<void>;
    /**
     * Prompt the user for a username amnd password to load the UserSession with
     * @async
     */
    prompt(): Promise<void>;
    /**
     * Verify the loaded UserSession
     * @returns {boolean} Whether the session is valid or not
     */
    verify(): Promise<boolean>;
    /**
     * Add a comment
     * @async
     * @param {Object} o - Options
     * @param {string|number} [o.project] - Project to comment on. Overrides user and studio properties.
     * @param {string} [o.user] - User to comment on. Overrides studio property.
     * @param {string|number} [o.studio] - Studio to comment on.
     * @param {string|number} [o.parent] - Comment to reply to.
     * @param {string} [o.replyto] - The user id to address (@username ...).
     * @param {string} [o.content=""] - The text of the comment to post.
     */
    comment(o: AnyObject): Promise<void>;
    /**
     * Create a new CloudSession with the current UserSession.
     * @param {string|number} proj - ID of the project to connect to.
     * @returns {CloudSession} A loaded CloudSession.
     */
    cloudSession(proj: number | string, turbowarp?: boolean): Promise<CloudSession>;
}
export default UserSession;
